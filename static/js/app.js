document.addEventListener('DOMContentLoaded', () => {
    
    // URL-—ã –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–¥–µ–∂–Ω—ã–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ/–∫–æ—Ä–Ω–µ–≤—ã–µ –ø—É—Ç–∏.
    const LOGIN_PAGE = '/'; 
    const PROFILE_PAGE = '/user_profile.html';
    const REDIRECT_DELAY = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞ –∑–∞–¥–µ—Ä–∂–∫–∏

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
    const getElement = (id) => document.getElementById(id);

    // ------------------------------------
    // 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
    // ------------------------------------
    const registerForm = getElement('registerForm');
    const registerMessageElement = getElement('message');

    if (registerForm) {
        console.log('üîó –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
        
        registerForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            // –ò—Å–ø–æ–ª—å–∑—É–µ–º FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª–µ–π –∏ —Ñ–∞–π–ª–∞
            const formData = new FormData(registerForm);
            
            if (registerMessageElement) registerMessageElement.textContent = '';
            
            try {
                const response = await fetch('/register', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (response.ok) {
                    registerMessageElement.textContent = result.message;
                    registerMessageElement.style.color = 'green';
                    registerForm.reset();
                    
                    console.log(`‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ ${LOGIN_PAGE} —á–µ—Ä–µ–∑ ${REDIRECT_DELAY / 1000}—Å...`);

                    // –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è -> –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
                    setTimeout(() => {
                        window.location.href = LOGIN_PAGE; 
                    }, REDIRECT_DELAY);
                } else {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', result.message);
                    registerMessageElement.textContent = `–û—à–∏–±–∫–∞: ${result.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
                    registerMessageElement.style.color = 'red';
                }
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
                if (registerMessageElement) {
                    registerMessageElement.textContent = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏. –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.';
                    registerMessageElement.style.color = 'red';
                }
            }
        });
    }

    
    // ------------------------------------
    // 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ (–õ–æ–≥–∏–Ω–∞)
    // ------------------------------------
    const loginForm = getElement('loginForm');
    const loginMessageElement = getElement('loginMessage');

    if (loginForm) {
        console.log('üîó –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');

        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            // –°–±–æ—Ä email –∏ password
            const data = {
                email: getElement('emailInput')?.value,
                password: getElement('password')?.value
            };

            if (loginMessageElement) loginMessageElement.textContent = '';
            
            try {
                const response = await fetch('/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (response.ok) {
                    if (loginMessageElement) {
                         loginMessageElement.textContent = result.message;
                         loginMessageElement.style.color = 'green';
                         loginForm.reset();
                    }
                    console.log(`‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ ${PROFILE_PAGE} —á–µ—Ä–µ–∑ ${REDIRECT_DELAY / 1000}—Å...`);

                    // –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ -> –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
                    setTimeout(() => {
                        window.location.href = PROFILE_PAGE; 
                    }, REDIRECT_DELAY);
                    
                } else {
                    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', result.message);
                    if (loginMessageElement) {
                        loginMessageElement.textContent = `–û—à–∏–±–∫–∞: ${result.message || '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'}`;
                        loginMessageElement.style.color = 'red';
                    }
                }
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –≤—Ö–æ–¥–µ:', error);
                if (loginMessageElement) {
                    loginMessageElement.textContent = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏. –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.';
                    loginMessageElement.style.color = 'red';
                }
            }
        });
    }

    // ------------------------------------
    // 3. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞
    // ------------------------------------
    const displayUsernameElement = getElement('displayUsername');
    const userEmailDisplayElement = getElement('userEmailDisplay'); 
    const logoutBtn = getElement('logoutBtn');
    const userAvatarElement = getElement('userAvatar'); 
    
    // ‚úÖ –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –ø—Ä–æ—Ñ–∏–ª—è
    const profileSettingsForm = getElement('profileSettingsForm');
    const firstNameInput = getElement('firstName');
    const lastNameInput = getElement('lastName');
    const emailInput = getElement('email');
    const newPasswordInput = getElement('newPassword');
    const userAvatarMain = getElement('userAvatarMain');
    const displayUsernameMain = getElement('displayUsernameMain');
    const userEmailDisplayMain = getElement('userEmailDisplayMain');
    const profileMessageElement = getElement('profileMessage'); // –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ—Ñ–∏–ª—è
    if (displayUsernameElement) {
        // ‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        async function loadUserProfile() {
            try {
                const response = await fetch('/user');
                const result = await response.json();

                if (response.ok) {
                    // –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è –Ω–∞ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é 
                    const currentFullUsername = result.username || '';
                    const parts = currentFullUsername.split(' ');
                    const firstName = parts[0] || '';
                    const lastName = parts.slice(1).join(' ') || '';

                    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –±–æ–∫–æ–≤–æ–º –º–µ–Ω—é
                    displayUsernameElement.textContent = currentFullUsername;
                    userEmailDisplayElement.textContent = result.email;
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –≥–ª–∞–≤–Ω–æ–π —Å–µ–∫—Ü–∏–∏ (–µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç)
                    if (displayUsernameMain) displayUsernameMain.textContent = currentFullUsername;
                    if (userEmailDisplayMain) userEmailDisplayMain.textContent = result.email;
                    
                    // ‚úÖ –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–æ—Ä–º—É –Ω–∞—Å—Ç—Ä–æ–µ–∫
                    if (firstNameInput) firstNameInput.value = firstName;
                    if (lastNameInput) lastNameInput.value = lastName;
                    if (emailInput) emailInput.value = result.email;
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–≤–∞—Ç–∞—Ä—ã
                    if (userAvatarElement && result.photo_url) userAvatarElement.src = result.photo_url;
                    if (userAvatarMain && result.photo_url) userAvatarMain.src = result.photo_url;


                    console.log(`üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: ${result.username}, Email: ${result.email}, –§–æ—Ç–æ: ${result.photo_url || '–ù–µ—Ç'}`);
                } else {
                    console.warn("‚ö†Ô∏è –°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Ö–æ–¥.");
                    window.location.href = LOGIN_PAGE;
                }
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.', error);
                window.location.href = LOGIN_PAGE; 
            }
        }
        
        loadUserProfile();
        
        // =======================================================================
        // ‚úÖ –û–ë–†–ê–ë–û–¢–ß–ò–ö –°–û–•–†–ê–ù–ï–ù–ò–Ø –ù–ê–°–¢–†–û–ï–ö –ü–†–û–§–ò–õ–Ø
        // =======================================================================
        if (profileSettingsForm) {
            profileSettingsForm.addEventListener('submit', async (e) => {
                e.preventDefault();
                
                // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã, –≤–∫–ª—é—á–∞—è —Ñ–∞–π–ª
                const formData = new FormData();
                
                // –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è: –ò–º—è + –§–∞–º–∏–ª–∏—è
                const fullName = (firstNameInput.value.trim() + ' ' + lastNameInput.value.trim()).trim();

                formData.append('username', fullName);
                formData.append('email', emailInput.value);
                
                // –î–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –±—ã–ª –≤–≤–µ–¥–µ–Ω
                if (newPasswordInput.value) {
                    formData.append('new_password', newPasswordInput.value);
                }

                // –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∞–π–ª —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –æ–Ω –≤—ã–±—Ä–∞–Ω
                const photoFile = getElement('photoUpload').files[0];
                if (photoFile) {
                    formData.append('profile_photo', photoFile);
                }
                
                if (profileMessageElement) {
                    profileMessageElement.textContent = '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...';
                    profileMessageElement.style.color = 'orange';
                }

                try {
                    const response = await fetch('/user/update', {
                        method: 'POST',
                        // –ù–ï —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Content-Type, —á—Ç–æ–±—ã –±—Ä–∞—É–∑–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª multipart/form-data
                        body: formData 
                    });

                    const result = await response.json();

                    if (response.ok) {
                        if (profileMessageElement) {
                             profileMessageElement.textContent = result.message;
                             profileMessageElement.style.color = 'green';
                        }
                        newPasswordInput.value = ''; // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø–∞—Ä–æ–ª—è

                        // –ï—Å–ª–∏ email –∏–∑–º–µ–Ω–∏–ª—Å—è, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å –∫—É–∫—É –∏ –¥–∞–Ω–Ω—ã–µ
                        if (result.new_email && result.new_email !== emailInput.value) {
                             console.log('‚úÖ Email –∏–∑–º–µ–Ω–µ–Ω. –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏...');
                             setTimeout(() => window.location.reload(), 500);
                        } else {
                            // –ï—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, –Ω–æ –±–µ–∑ —Å–º–µ–Ω—ã email, –ø—Ä–æ—Å—Ç–æ –æ–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                            loadUserProfile(); 
                        }
                    } else {
                        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', result.message);
                        if (profileMessageElement) {
                             profileMessageElement.textContent = `–û—à–∏–±–∫–∞: ${result.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}`;
                             profileMessageElement.style.color = 'red';
                        }
                    }
                } catch (error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', error);
                    if (profileMessageElement) {
                         profileMessageElement.textContent = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏. –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.';
                         profileMessageElement.style.color = 'red';
                    }
                }
            });
        }


        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞ (–ë–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
        if (logoutBtn) {
            logoutBtn.addEventListener('click', async () => {
                try {
                    const response = await fetch('/logout', { method: 'POST' });
                    
                    if (response.ok) {
                        console.log('üö™ –í—ã—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Ö–æ–¥.');
                        window.location.href = LOGIN_PAGE; 
                    }
                } catch (error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
                }
            });
        }
    }
});