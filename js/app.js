document.addEventListener('DOMContentLoaded', () => {
    
    // URL-—ã –¥–ª—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–¥–µ–∂–Ω—ã–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ/–∫–æ—Ä–Ω–µ–≤—ã–µ –ø—É—Ç–∏.
    const LOGIN_PAGE = '/'; 
    const PROFILE_PAGE = '/templates/user_profile.html';
    const REDIRECT_DELAY = 1000; // 1 —Å–µ–∫—É–Ω–¥–∞ –∑–∞–¥–µ—Ä–∂–∫–∏

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
    const getElement = (id) => document.getElementById(id);

    // ------------------------------------
    // 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    // ------------------------------------
    const registerForm = getElement('registerForm');
    const registerMessageElement = getElement('message');

    if (registerForm) {
        console.log('üîó –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Ñ–æ—Ä–º–∞ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
        
        registerForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            // ‚úÖ –ò–°–ü–û–õ–¨–ó–£–ï–ú FormData –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –ø–æ–ª–µ–π –∏ —Ñ–∞–π–ª–∞
            const formData = new FormData(registerForm);
            
            if (registerMessageElement) registerMessageElement.textContent = '';
            
            try {
                const response = await fetch('/register', {
                    method: 'POST',
                    // ‚ö†Ô∏è –ù–ï —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Content-Type, —á—Ç–æ–±—ã –±—Ä–∞—É–∑–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª multipart/form-data
                    body: formData
                });

                const result = await response.json();

                if (response.ok) {
                    registerMessageElement.textContent = result.message;
                    registerMessageElement.style.color = 'green';
                    registerForm.reset();
                    
                    console.log(`‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ ${LOGIN_PAGE} —á–µ—Ä–µ–∑ ${REDIRECT_DELAY / 1000}—Å...`);

                    // –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è -> –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤—Ö–æ–¥–∞
                    setTimeout(() => {
                        window.location.href = LOGIN_PAGE; 
                    }, REDIRECT_DELAY);
                } else {
                    console.error('‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', result.message);
                    registerMessageElement.textContent = `–û—à–∏–±–∫–∞: ${result.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
                    registerMessageElement.style.color = 'red';
                }
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
                if (registerMessageElement) {
                    registerMessageElement.textContent = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏. –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.';
                    registerMessageElement.style.color = 'red';
                }
            }
        });
    }

    
    // ------------------------------------
    // 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥–∞ (–õ–æ–≥–∏–Ω–∞)
    // ------------------------------------
    const loginForm = getElement('loginForm');
    const loginMessageElement = getElement('loginMessage');

    if (loginForm) {
        console.log('üîó –§–æ—Ä–º–∞ –≤—Ö–æ–¥–∞ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');

        loginForm.addEventListener('submit', async (e) => {
            e.preventDefault();

            // –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
            const data = {
                username: getElement('username')?.value, 
                password: getElement('password')?.value
            };

            if (loginMessageElement) loginMessageElement.textContent = '';
            
            try {
                const response = await fetch('/login', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                const result = await response.json();

                if (response.ok) {
                    if (loginMessageElement) {
                         loginMessageElement.textContent = result.message;
                         loginMessageElement.style.color = 'green';
                         loginForm.reset();
                    }
                    console.log(`‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ ${PROFILE_PAGE} —á–µ—Ä–µ–∑ ${REDIRECT_DELAY / 1000}—Å...`);

                    // –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ -> –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å
                    setTimeout(() => {
                        window.location.href = PROFILE_PAGE; 
                    }, REDIRECT_DELAY);
                    
                } else {
                    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', result.message);
                    if (loginMessageElement) {
                        loginMessageElement.textContent = `–û—à–∏–±–∫–∞: ${result.message || '–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'}`;
                        loginMessageElement.style.color = 'red';
                    }
                }
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –≤—Ö–æ–¥–µ:', error);
                if (loginMessageElement) {
                    loginMessageElement.textContent = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏. –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.';
                    loginMessageElement.style.color = 'red';
                }
            }
        });
    }

    // ------------------------------------
    // 3. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è –∏ –≤—ã—Ö–æ–¥
    // ------------------------------------
    const displayUsernameElement = getElement('displayUsername');
    const userEmailDisplayElement = getElement('userEmailDisplay'); 
    const logoutBtn = getElement('logoutBtn');
    
    // ‚úÖ –ù–û–í–´–ô –≠–õ–ï–ú–ï–ù–¢: –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –º—ã –æ–±–Ω–æ–≤–∏–ª–∏ –≤ HTML
    const userAvatarElement = getElement('userAvatar'); 
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ—Ñ–∏–ª—è
    if (displayUsernameElement) {
        async function loadUserProfile() {
            try {
                const response = await fetch('/user');
                const result = await response.json();

                if (response.ok) {
                    displayUsernameElement.textContent = result.username;
                    
                    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º Email
                    if (userEmailDisplayElement && result.email) {
                        userEmailDisplayElement.textContent = result.email;
                    } else if (userEmailDisplayElement) {
                        userEmailDisplayElement.textContent = 'Email –Ω–µ —É–∫–∞–∑–∞–Ω';
                    }
                    
                    // üîë –ö–õ–Æ–ß–ï–í–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Ç—å –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
                    if (userAvatarElement && result.photo_url) {
                        // Go-—Å–µ—Ä–≤–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç photo_url, –Ω–∞–ø—Ä–∏–º–µ—Ä: "/uploads/user_12345.jpg"
                        userAvatarElement.src = result.photo_url;
                        // –ü—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª —Ñ–æ—Ç–æ)
                        // —Å—Ä–∞–±–æ—Ç–∞–µ—Ç onerror, –∫–æ—Ç–æ—Ä—ã–π –º—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –≤ HTML.
                    }

                    console.log(`üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: ${result.username}, Email: ${result.email}, –§–æ—Ç–æ: ${result.photo_url || '–ù–µ—Ç'}`);
                } else {
                    // 401 Unauthorized –æ—Ç Go-—Å–µ—Ä–≤–µ—Ä–∞ (–∫—É–∫–∏ –Ω–µ—Ç –∏–ª–∏ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω)
                    console.warn("‚ö†Ô∏è –°–µ—Å—Å–∏—è –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Ö–æ–¥.");
                    window.location.href = LOGIN_PAGE;
                }
            } catch (error) {
                // –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ (—Å–µ—Ä–≤–µ—Ä –≤—ã–∫–ª—é—á–µ–Ω)
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.', error);
                window.location.href = LOGIN_PAGE; 
            }
        }
        
        loadUserProfile();

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Ö–æ–¥–∞
        if (logoutBtn) {
            logoutBtn.addEventListener('click', async () => {
                try {
                    const response = await fetch('/logout', { method: 'POST' });
                    
                    if (response.ok) {
                        console.log('üö™ –í—ã—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Ö–æ–¥.');
                        window.location.href = LOGIN_PAGE; 
                    }
                } catch (error) {
                    console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
                }
            });
        }
    }
});